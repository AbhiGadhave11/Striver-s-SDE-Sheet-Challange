int countSmallerThanMid(vector<int>arr,int mid)
{
    int low = 0,high = arr.size()-1;
    while(low <= high)
    {
        int md = (low + high)/2;
        if(arr[md] <= mid)
        {
            low = md + 1;
        }
        else
            high = md - 1;
    }
    return low;
}
int getMedian(vector<vector<int>> &matrix)
{
    int n = matrix.size();
    int m = matrix[0].size();
    int low = 1,high = 1e9;
    while(low <= high)
    {
        int mid = (low + high)/2;
        int cnt = 0;
        for(int i=0;i<n;i++)
        {
            int ret = countSmallerThanMid(matrix[i], mid);
            cnt = cnt + ret;
        }
        if(cnt<=(n*m)/2)
            low = mid + 1;
        else
            high = mid -1 ;
    }
    return low;
}
